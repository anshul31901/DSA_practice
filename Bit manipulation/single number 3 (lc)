#include <vector>
using namespace std;

class Solution {
public:
    vector<int> singleNumber(vector<int>& nums) {
        int z = 0;
        for (int i = 0; i < nums.size(); i++) {
            z = z ^ nums[i];
        }
        // Ensure z is not zero before performing the operation
        if (z == 0) return {}; // No unique numbers found
        int q=1;
        if(z!=INT_MIN){q=z&(-z);}

        // Unique 2 int me ek to bit diff hogi hi ...joki hogi xor ki rightmost bit
      

        int b1 = 0;
        int b2 = 0;
        for (int i = 0; i < nums.size(); i++) {
            if (q & nums[i]) {
                b1 = b1 ^ nums[i];
            } else {
                b2 = b2 ^ nums[i];
            }
        }
        vector<int> ans;
        ans.push_back(b1);
        ans.push_back(b2);
        return ans;
    }
};
